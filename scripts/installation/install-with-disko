#!/usr/bin/env bash
#
# ==================== NIXOS INSTALLATION SCRIPT ====================
#
# Description:  Automates NixOS installation using the disko tool for disk
#               partitioning, formatting, and mounting
#
# Author:       Norpie
# Created:      2023-01-01
# Updated:      2023-12-31
#
# Usage:        ./install-with-disko <hostname> [username]
#
# Arguments:
#   hostname    Target host configuration to install
#   username    Primary user (defaults to jon)
#
# Requirements:
#   - NixOS live environment
#   - Git repository with host configurations
#   - sudo access
# 
# ==================== INITIALIZATION ====================

set -euo pipefail
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# Parse arguments
TARGET_HOST="${1:-}"
TARGET_USER="${2:-jon}"

# ==================== VALIDATION ====================

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
  echo "ERROR! $(basename "${0}") should be run as a regular user"
  exit 1
fi

# Validate required arguments
if [[ -z "$TARGET_HOST" ]]; then
    echo "ERROR! $(basename "${0}") requires a hostname as the first argument"
    exit 1
fi

# Check if disk configuration exists
if [ ! -e "hosts/${TARGET_HOST}/disks.nix" ]; then
  echo "ERROR! $(basename "${0}") could not find the required host/${TARGET_HOST}/disks.nix"
  exit 1
fi

# ==================== CONFIRMATION ====================

echo "WARNING! The disks in ${TARGET_HOST} are about to get wiped"
echo "         NixOS will be re-installed"
echo "         This is a destructive operation"
echo
read -p "Are you sure? [y/N]" -n 1 -r
echo

# ==================== INSTALLATION ====================

if [[ $REPLY =~ ^[Yy]$ ]]; then
    # Ensure sudo credentials are cached
    sudo true

    # Partition and format disks
    sudo nix run github:nix-community/disko \
        --extra-experimental-features "nix-command flakes" \
        --no-write-lock-file \
        -- \
        --mode zap_create_mount \
        "hosts/${TARGET_HOST}/disks.nix"

    # Install NixOS
    sudo nixos-install --flake ".#${TARGET_HOST}"
fi